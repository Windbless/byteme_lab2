Useless nonterminals

   comp


Terminals which are not used

   FOREACH
   NEQ
   EQ
   GTE
   GT
   LTE
   LT


Useless rules

   66 comp: EQ
   67     | NEQ
   68     | LT
   69     | GT
   70     | LTE
   71     | GTE


State 82 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 Declarations: /* empty */
    6             | declaration SEMICOLON Declarations

    7 statements: /* empty */
    8           | statement SEMICOLON statements

    9 declaration: Identifiers COLON Arrayid

   10 Identifiers: IDENTIFIERS
   11            | IDENTIFIERS COMMA Identifiers

   12 Arrayid: INTEGER
   13        | ARRAY LSQUARE NUMBER RSQUARE OF INTEGER

   14 statement: astate
   15          | bstate
   16          | cstate
   17          | dstate
   18          | estate
   19          | fstate
   20          | gstate
   21          | hstate

   22 astate: var ASSIGN expression

   23 bstate: IF bool_expr THEN states elsestates ENDIF

   24 states: statement SEMICOLON
   25       | statement SEMICOLON states

   26 elsestates: /* empty */
   27           | ELSE states

   28 cstate: WHILE bool_expr BEGINLOOP states

   29 dstate: DO BEGINLOOP states ENDLOOP states ENDLOOP

   30 estate: READ vars

   31 fstate: WRITE vars

   32 gstate: CONTINUE

   33 hstate: RETURN expression

   34 bool_expr: relation_And_Expr
   35          | relation_And_Expr OR bool_expr

   36 relation_And_Expr: relation_Expr
   37                  | relation_Expr AND relation_And_Expr

   38 relation_Expr: NOT re_ex
   39              | re_ex

   40 re_ex: expression
   41      | TRUE
   42      | FALSE
   43      | LPAREN bool_expr RPAREN

   44 expression: multiplicative_Expr expre

   45 expre: /* empty */
   46      | PLUS multiplicative_Expr expre
   47      | SUB multiplicative_Expr expre

   48 multiplicative_Expr: term terms

   49 terms: /* empty */
   50      | MULT term terms
   51      | DIVI term terms
   52      | MOD term terms

   53 term: posterm
   54     | SUB posterm
   55     | ident

   56 ident: IDENTIFIERS LPAREN ex RPAREN

   57 ex: /* empty */
   58   | expression COMMA ex

   59 posterm: var
   60        | NUMBER
   61        | LPAREN expression RPAREN

   62 var: IDENTIFIERS
   63    | IDENTIFIERS LSQUARE expression RSQUARE

   64 vars: var COMMA vars
   65     | var


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 13 60
IDENTIFIERS (259) 4 10 11 56 62 63
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 12 13
ARRAY (268) 13
OF (269) 13
IF (270) 23
THEN (271) 23
ENDIF (272) 23
ELSE (273) 27
WHILE (274) 28
DO (275) 29
FOREACH (276)
BEGINLOOP (277) 28 29
ENDLOOP (278) 29
CONTINUE (279) 32
READ (280) 30
WRITE (281) 31
TRUE (282) 41
FALSE (283) 42
SEMICOLON (284) 4 6 8 24 25
COLON (285) 9
COMMA (286) 11 58 64
LPAREN (287) 43 56 61
RPAREN (288) 43 56 61
LSQUARE (289) 13 63
RSQUARE (290) 13 63
RETURN (291) 33
SUB (292) 47 54
PLUS (293) 46
MOD (294) 52
DIVI (295) 51
MULT (296) 50
OR (297) 35
AND (298) 37
NEQ (299)
EQ (300)
GTE (301)
GT (302)
LTE (303)
LT (304)
NOT (305) 38
ASSIGN (306) 22


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
Declarations (56)
    on left: 5 6, on right: 4 6
statements (57)
    on left: 7 8, on right: 4 8
declaration (58)
    on left: 9, on right: 6
Identifiers (59)
    on left: 10 11, on right: 9 11
Arrayid (60)
    on left: 12 13, on right: 9
statement (61)
    on left: 14 15 16 17 18 19 20 21, on right: 8 24 25
astate (62)
    on left: 22, on right: 14
bstate (63)
    on left: 23, on right: 15
states (64)
    on left: 24 25, on right: 23 25 27 28 29
elsestates (65)
    on left: 26 27, on right: 23
cstate (66)
    on left: 28, on right: 16
dstate (67)
    on left: 29, on right: 17
estate (68)
    on left: 30, on right: 18
fstate (69)
    on left: 31, on right: 19
gstate (70)
    on left: 32, on right: 20
hstate (71)
    on left: 33, on right: 21
bool_expr (72)
    on left: 34 35, on right: 23 28 35 43
relation_And_Expr (73)
    on left: 36 37, on right: 34 35 37
relation_Expr (74)
    on left: 38 39, on right: 36 37
re_ex (75)
    on left: 40 41 42 43, on right: 38 39
expression (76)
    on left: 44, on right: 22 33 40 58 61 63
expre (77)
    on left: 45 46 47, on right: 44 46 47
multiplicative_Expr (78)
    on left: 48, on right: 44 46 47
terms (79)
    on left: 49 50 51 52, on right: 48 50 51 52
term (80)
    on left: 53 54 55, on right: 48 50 51 52
ident (81)
    on left: 56, on right: 55
ex (82)
    on left: 57 58, on right: 56 58
posterm (83)
    on left: 59 60 61, on right: 53 54
var (84)
    on left: 62 63, on right: 22 59 64 65
vars (85)
    on left: 64 65, on right: 30 31 64


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


state 1

    4 function: FUNCTION . IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 5


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


state 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIERS . SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: prog_start $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIERS SEMICOLON . BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS . Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 10

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 11
    declaration   go to state 12
    Identifiers   go to state 13


state 10

   10 Identifiers: IDENTIFIERS .
   11            | IDENTIFIERS . COMMA Identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (Identifiers)


state 11

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations . ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


state 12

    6 Declarations: declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


state 13

    9 declaration: Identifiers . COLON Arrayid

    COLON  shift, and go to state 17


state 14

   11 Identifiers: IDENTIFIERS COMMA . Identifiers

    IDENTIFIERS  shift, and go to state 10

    Identifiers  go to state 18


state 15

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS . BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


state 16

    6 Declarations: declaration SEMICOLON . Declarations

    IDENTIFIERS  shift, and go to state 10

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 20
    declaration   go to state 12
    Identifiers   go to state 13


state 17

    9 declaration: Identifiers COLON . Arrayid

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    Arrayid  go to state 23


state 18

   11 Identifiers: IDENTIFIERS COMMA Identifiers .

    $default  reduce using rule 11 (Identifiers)


state 19

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS . Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 10

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 24
    declaration   go to state 12
    Identifiers   go to state 13


state 20

    6 Declarations: declaration SEMICOLON Declarations .

    $default  reduce using rule 6 (Declarations)


state 21

   12 Arrayid: INTEGER .

    $default  reduce using rule 12 (Arrayid)


state 22

   13 Arrayid: ARRAY . LSQUARE NUMBER RSQUARE OF INTEGER

    LSQUARE  shift, and go to state 25


state 23

    9 declaration: Identifiers COLON Arrayid .

    $default  reduce using rule 9 (declaration)


state 24

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


state 25

   13 Arrayid: ARRAY LSQUARE . NUMBER RSQUARE OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 28


state 27

   13 Arrayid: ARRAY LSQUARE NUMBER . RSQUARE OF INTEGER

    RSQUARE  shift, and go to state 29


state 28

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    $default  reduce using rule 7 (statements)

    statements  go to state 38
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 29

   13 Arrayid: ARRAY LSQUARE NUMBER RSQUARE . OF INTEGER

    OF  shift, and go to state 49


state 30

   62 var: IDENTIFIERS .
   63    | IDENTIFIERS . LSQUARE expression RSQUARE

    LSQUARE  shift, and go to state 50

    $default  reduce using rule 62 (var)


state 31

   23 bstate: IF . bool_expr THEN states elsestates ENDIF

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 58
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 32

   28 cstate: WHILE . bool_expr BEGINLOOP states

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 68
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 33

   29 dstate: DO . BEGINLOOP states ENDLOOP states ENDLOOP

    BEGINLOOP  shift, and go to state 69


state 34

   32 gstate: CONTINUE .

    $default  reduce using rule 32 (gstate)


state 35

   30 estate: READ . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 71


state 36

   31 fstate: WRITE . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 72


state 37

   33 hstate: RETURN . expression

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 74
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 38

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 75


state 39

    8 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 76


state 40

   14 statement: astate .

    $default  reduce using rule 14 (statement)


state 41

   15 statement: bstate .

    $default  reduce using rule 15 (statement)


state 42

   16 statement: cstate .

    $default  reduce using rule 16 (statement)


state 43

   17 statement: dstate .

    $default  reduce using rule 17 (statement)


state 44

   18 statement: estate .

    $default  reduce using rule 18 (statement)


state 45

   19 statement: fstate .

    $default  reduce using rule 19 (statement)


state 46

   20 statement: gstate .

    $default  reduce using rule 20 (statement)


state 47

   21 statement: hstate .

    $default  reduce using rule 21 (statement)


state 48

   22 astate: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


state 49

   13 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF . INTEGER

    INTEGER  shift, and go to state 78


state 50

   63 var: IDENTIFIERS LSQUARE . expression RSQUARE

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 79
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 51

   60 posterm: NUMBER .

    $default  reduce using rule 60 (posterm)


state 52

   56 ident: IDENTIFIERS . LPAREN ex RPAREN
   62 var: IDENTIFIERS .
   63    | IDENTIFIERS . LSQUARE expression RSQUARE

    LPAREN   shift, and go to state 80
    LSQUARE  shift, and go to state 50

    $default  reduce using rule 62 (var)


state 53

   41 re_ex: TRUE .

    $default  reduce using rule 41 (re_ex)


state 54

   42 re_ex: FALSE .

    $default  reduce using rule 42 (re_ex)


state 55

   43 re_ex: LPAREN . bool_expr RPAREN
   61 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 81
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 82
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 56

   54 term: SUB . posterm

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 30
    LPAREN       shift, and go to state 73

    posterm  go to state 83
    var      go to state 67


state 57

   38 relation_Expr: NOT . re_ex

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56

    re_ex                go to state 84
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 58

   23 bstate: IF bool_expr . THEN states elsestates ENDIF

    THEN  shift, and go to state 85


state 59

   34 bool_expr: relation_And_Expr .
   35          | relation_And_Expr . OR bool_expr

    OR  shift, and go to state 86

    $default  reduce using rule 34 (bool_expr)


state 60

   36 relation_And_Expr: relation_Expr .
   37                  | relation_Expr . AND relation_And_Expr

    AND  shift, and go to state 87

    $default  reduce using rule 36 (relation_And_Expr)


state 61

   39 relation_Expr: re_ex .

    $default  reduce using rule 39 (relation_Expr)


state 62

   40 re_ex: expression .

    $default  reduce using rule 40 (re_ex)


state 63

   44 expression: multiplicative_Expr . expre

    SUB   shift, and go to state 88
    PLUS  shift, and go to state 89

    $default  reduce using rule 45 (expre)

    expre  go to state 90


state 64

   48 multiplicative_Expr: term . terms

    MOD   shift, and go to state 91
    DIVI  shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 49 (terms)

    terms  go to state 94


state 65

   55 term: ident .

    $default  reduce using rule 55 (term)


state 66

   53 term: posterm .

    $default  reduce using rule 53 (term)


state 67

   59 posterm: var .

    $default  reduce using rule 59 (posterm)


state 68

   28 cstate: WHILE bool_expr . BEGINLOOP states

    BEGINLOOP  shift, and go to state 95


state 69

   29 dstate: DO BEGINLOOP . states ENDLOOP states ENDLOOP

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 97
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 70

   64 vars: var . COMMA vars
   65     | var .

    COMMA  shift, and go to state 98

    $default  reduce using rule 65 (vars)


state 71

   30 estate: READ vars .

    $default  reduce using rule 30 (estate)


state 72

   31 fstate: WRITE vars .

    $default  reduce using rule 31 (fstate)


state 73

   61 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 99
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 74

   33 hstate: RETURN expression .

    $default  reduce using rule 33 (hstate)


state 75

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


state 76

    8 statements: statement SEMICOLON . statements

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    $default  reduce using rule 7 (statements)

    statements  go to state 100
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 77

   22 astate: var ASSIGN . expression

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 101
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 78

   13 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF INTEGER .

    $default  reduce using rule 13 (Arrayid)


state 79

   63 var: IDENTIFIERS LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 102


state 80

   56 ident: IDENTIFIERS LPAREN . ex RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    $default  reduce using rule 57 (ex)

    expression           go to state 103
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    ex                   go to state 104
    posterm              go to state 66
    var                  go to state 67


state 81

   43 re_ex: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 105


state 82

   40 re_ex: expression .
   61 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 106

    RPAREN    [reduce using rule 40 (re_ex)]
    $default  reduce using rule 40 (re_ex)


state 83

   54 term: SUB posterm .

    $default  reduce using rule 54 (term)


state 84

   38 relation_Expr: NOT re_ex .

    $default  reduce using rule 38 (relation_Expr)


state 85

   23 bstate: IF bool_expr THEN . states elsestates ENDIF

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 107
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 86

   35 bool_expr: relation_And_Expr OR . bool_expr

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 108
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 87

   37 relation_And_Expr: relation_Expr AND . relation_And_Expr

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    relation_And_Expr    go to state 109
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 88

   47 expre: SUB . multiplicative_Expr expre

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    multiplicative_Expr  go to state 110
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 89

   46 expre: PLUS . multiplicative_Expr expre

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    multiplicative_Expr  go to state 111
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 90

   44 expression: multiplicative_Expr expre .

    $default  reduce using rule 44 (expression)


state 91

   52 terms: MOD . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 112
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 92

   51 terms: DIVI . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 113
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 93

   50 terms: MULT . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 114
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 94

   48 multiplicative_Expr: term terms .

    $default  reduce using rule 48 (multiplicative_Expr)


state 95

   28 cstate: WHILE bool_expr BEGINLOOP . states

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 115
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 96

   24 states: statement . SEMICOLON
   25       | statement . SEMICOLON states

    SEMICOLON  shift, and go to state 116


state 97

   29 dstate: DO BEGINLOOP states . ENDLOOP states ENDLOOP

    ENDLOOP  shift, and go to state 117


state 98

   64 vars: var COMMA . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 118


state 99

   61 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 106


state 100

    8 statements: statement SEMICOLON statements .

    $default  reduce using rule 8 (statements)


state 101

   22 astate: var ASSIGN expression .

    $default  reduce using rule 22 (astate)


state 102

   63 var: IDENTIFIERS LSQUARE expression RSQUARE .

    $default  reduce using rule 63 (var)


state 103

   58 ex: expression . COMMA ex

    COMMA  shift, and go to state 119


state 104

   56 ident: IDENTIFIERS LPAREN ex . RPAREN

    RPAREN  shift, and go to state 120


state 105

   43 re_ex: LPAREN bool_expr RPAREN .

    $default  reduce using rule 43 (re_ex)


state 106

   61 posterm: LPAREN expression RPAREN .

    $default  reduce using rule 61 (posterm)


state 107

   23 bstate: IF bool_expr THEN states . elsestates ENDIF

    ELSE  shift, and go to state 121

    $default  reduce using rule 26 (elsestates)

    elsestates  go to state 122


state 108

   35 bool_expr: relation_And_Expr OR bool_expr .

    $default  reduce using rule 35 (bool_expr)


state 109

   37 relation_And_Expr: relation_Expr AND relation_And_Expr .

    $default  reduce using rule 37 (relation_And_Expr)


state 110

   47 expre: SUB multiplicative_Expr . expre

    SUB   shift, and go to state 88
    PLUS  shift, and go to state 89

    $default  reduce using rule 45 (expre)

    expre  go to state 123


state 111

   46 expre: PLUS multiplicative_Expr . expre

    SUB   shift, and go to state 88
    PLUS  shift, and go to state 89

    $default  reduce using rule 45 (expre)

    expre  go to state 124


state 112

   52 terms: MOD term . terms

    MOD   shift, and go to state 91
    DIVI  shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 49 (terms)

    terms  go to state 125


state 113

   51 terms: DIVI term . terms

    MOD   shift, and go to state 91
    DIVI  shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 49 (terms)

    terms  go to state 126


state 114

   50 terms: MULT term . terms

    MOD   shift, and go to state 91
    DIVI  shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 49 (terms)

    terms  go to state 127


state 115

   28 cstate: WHILE bool_expr BEGINLOOP states .

    $default  reduce using rule 28 (cstate)


state 116

   24 states: statement SEMICOLON .
   25       | statement SEMICOLON . states

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    $default  reduce using rule 24 (states)

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 128
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 117

   29 dstate: DO BEGINLOOP states ENDLOOP . states ENDLOOP

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 129
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 118

   64 vars: var COMMA vars .

    $default  reduce using rule 64 (vars)


state 119

   58 ex: expression COMMA . ex

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    $default  reduce using rule 57 (ex)

    expression           go to state 103
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    ex                   go to state 130
    posterm              go to state 66
    var                  go to state 67


state 120

   56 ident: IDENTIFIERS LPAREN ex RPAREN .

    $default  reduce using rule 56 (ident)


state 121

   27 elsestates: ELSE . states

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statement  go to state 96
    astate     go to state 40
    bstate     go to state 41
    states     go to state 131
    cstate     go to state 42
    dstate     go to state 43
    estate     go to state 44
    fstate     go to state 45
    gstate     go to state 46
    hstate     go to state 47
    var        go to state 48


state 122

   23 bstate: IF bool_expr THEN states elsestates . ENDIF

    ENDIF  shift, and go to state 132


state 123

   47 expre: SUB multiplicative_Expr expre .

    $default  reduce using rule 47 (expre)


state 124

   46 expre: PLUS multiplicative_Expr expre .

    $default  reduce using rule 46 (expre)


state 125

   52 terms: MOD term terms .

    $default  reduce using rule 52 (terms)


state 126

   51 terms: DIVI term terms .

    $default  reduce using rule 51 (terms)


state 127

   50 terms: MULT term terms .

    $default  reduce using rule 50 (terms)


state 128

   25 states: statement SEMICOLON states .

    $default  reduce using rule 25 (states)


state 129

   29 dstate: DO BEGINLOOP states ENDLOOP states . ENDLOOP

    ENDLOOP  shift, and go to state 133


state 130

   58 ex: expression COMMA ex .

    $default  reduce using rule 58 (ex)


state 131

   27 elsestates: ELSE states .

    $default  reduce using rule 27 (elsestates)


state 132

   23 bstate: IF bool_expr THEN states elsestates ENDIF .

    $default  reduce using rule 23 (bstate)


state 133

   29 dstate: DO BEGINLOOP states ENDLOOP states ENDLOOP .

    $default  reduce using rule 29 (dstate)
