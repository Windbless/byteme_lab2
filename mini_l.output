Terminals which are not used

   FOREACH


Rules never reduced

    7 Declarations: error SEMICOLON

   13 declaration: error


State 10 conflicts: 1 shift/reduce
State 15 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 Declarations: /* empty */
    6             | declaration SEMICOLON Declarations
    7             | error SEMICOLON
    8             | error SEMICOLON Declarations
    9             | error

   10 statements: statement SEMICOLON statements
   11           | statement SEMICOLON

   12 declaration: Identifiers COLON Arrayid
   13            | error

   14 Identifiers: IDENTIFIERS
   15            | IDENTIFIERS COMMA Identifiers

   16 Arrayid: INTEGER
   17        | ARRAY LSQUARE NUMBER RSQUARE OF INTEGER

   18 statement: var ASSIGN expression
   19          | IF bool_expr THEN statements elsestates ENDIF
   20          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 elsestates: /* empty */
   27           | ELSE statements

   28 bool_expr: relation_And_Expr
   29          | relation_And_Expr OR bool_expr

   30 relation_And_Expr: relation_Expr
   31                  | relation_Expr AND relation_And_Expr

   32 relation_Expr: NOT expression comp expression
   33              | NOT TRUE
   34              | NOT FALSE
   35              | NOT LPAREN bool_expr RPAREN
   36              | expression comp expression
   37              | TRUE
   38              | FALSE
   39              | LPAREN bool_expr RPAREN

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | LTE
   45     | GTE

   46 expression: multiplicative_Expr expre

   47 expre: /* empty */
   48      | PLUS multiplicative_Expr expre
   49      | SUB multiplicative_Expr expre

   50 multiplicative_Expr: term terms

   51 terms: /* empty */
   52      | MULT term terms
   53      | DIVI term terms
   54      | MOD term terms

   55 term: posterm
   56     | SUB posterm
   57     | ident

   58 ident: IDENTIFIERS LPAREN ex RPAREN

   59 ex: /* empty */
   60   | expression
   61   | expression COMMA ex

   62 posterm: var
   63        | NUMBER
   64        | LPAREN expression RPAREN

   65 var: IDENTIFIERS
   66    | IDENTIFIERS LSQUARE expression RSQUARE

   67 vars: var COMMA vars
   68     | var


Terminals, with rules where they appear

$end (0) 0
error (256) 7 8 9 13
NUMBER (258) 17 63
IDENTIFIERS (259) 4 14 15 58 65 66
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 16 17
ARRAY (268) 17
OF (269) 17
IF (270) 19
THEN (271) 19
ENDIF (272) 19
ELSE (273) 27
WHILE (274) 20 21
DO (275) 21
FOREACH (276)
BEGINLOOP (277) 20 21
ENDLOOP (278) 20 21
CONTINUE (279) 24
READ (280) 22
WRITE (281) 23
TRUE (282) 33 37
FALSE (283) 34 38
SEMICOLON (284) 4 6 7 8 10 11
COLON (285) 12
COMMA (286) 15 61 67
LPAREN (287) 35 39 58 64
RPAREN (288) 35 39 58 64
LSQUARE (289) 17 66
RSQUARE (290) 17 66
RETURN (291) 25
SUB (292) 49 56
PLUS (293) 48
MOD (294) 54
DIVI (295) 53
MULT (296) 52
OR (297) 29
AND (298) 31
NEQ (299) 41
EQ (300) 40
GTE (301) 45
GT (302) 43
LTE (303) 44
LT (304) 42
NOT (305) 32 33 34 35
ASSIGN (306) 18


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
Declarations (56)
    on left: 5 6 7 8 9, on right: 4 6 8
statements (57)
    on left: 10 11, on right: 4 10 19 20 21 27
declaration (58)
    on left: 12 13, on right: 6
Identifiers (59)
    on left: 14 15, on right: 12 15
Arrayid (60)
    on left: 16 17, on right: 12
statement (61)
    on left: 18 19 20 21 22 23 24 25, on right: 10 11
elsestates (62)
    on left: 26 27, on right: 19
bool_expr (63)
    on left: 28 29, on right: 19 20 21 29 35 39
relation_And_Expr (64)
    on left: 30 31, on right: 28 29 31
relation_Expr (65)
    on left: 32 33 34 35 36 37 38 39, on right: 30 31
comp (66)
    on left: 40 41 42 43 44 45, on right: 32 36
expression (67)
    on left: 46, on right: 18 25 32 36 60 61 64 66
expre (68)
    on left: 47 48 49, on right: 46 48 49
multiplicative_Expr (69)
    on left: 50, on right: 46 48 49
terms (70)
    on left: 51 52 53 54, on right: 50 52 53 54
term (71)
    on left: 55 56 57, on right: 50 52 53 54
ident (72)
    on left: 58, on right: 57
ex (73)
    on left: 59 60 61, on right: 58 61
posterm (74)
    on left: 62 63 64, on right: 55 56
var (75)
    on left: 65 66, on right: 18 62 67 68
vars (76)
    on left: 67 68, on right: 22 23 67


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


state 1

    4 function: FUNCTION . IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 5


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


state 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIERS . SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: prog_start $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIERS SEMICOLON . BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS . Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    error        shift, and go to state 10
    IDENTIFIERS  shift, and go to state 11

    ENDPARAMS  reduce using rule 5 (Declarations)

    Declarations  go to state 12
    declaration   go to state 13
    Identifiers   go to state 14


state 10

    7 Declarations: error . SEMICOLON
    8             | error . SEMICOLON Declarations
    9             | error .
   13 declaration: error .

    SEMICOLON  shift, and go to state 15

    SEMICOLON  [reduce using rule 13 (declaration)]
    $default   reduce using rule 9 (Declarations)


state 11

   14 Identifiers: IDENTIFIERS .
   15            | IDENTIFIERS . COMMA Identifiers

    COMMA  shift, and go to state 16

    $default  reduce using rule 14 (Identifiers)


state 12

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations . ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 17


state 13

    6 Declarations: declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 18


state 14

   12 declaration: Identifiers . COLON Arrayid

    COLON  shift, and go to state 19


state 15

    7 Declarations: error SEMICOLON .
    8             | error SEMICOLON . Declarations

    error        shift, and go to state 10
    IDENTIFIERS  shift, and go to state 11

    ENDPARAMS  reduce using rule 5 (Declarations)
    ENDPARAMS  [reduce using rule 7 (Declarations)]
    ENDLOCALS  reduce using rule 5 (Declarations)
    ENDLOCALS  [reduce using rule 7 (Declarations)]

    Declarations  go to state 20
    declaration   go to state 13
    Identifiers   go to state 14


state 16

   15 Identifiers: IDENTIFIERS COMMA . Identifiers

    IDENTIFIERS  shift, and go to state 11

    Identifiers  go to state 21


state 17

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS . BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 22


state 18

    6 Declarations: declaration SEMICOLON . Declarations

    error        shift, and go to state 10
    IDENTIFIERS  shift, and go to state 11

    ENDPARAMS  reduce using rule 5 (Declarations)
    ENDLOCALS  reduce using rule 5 (Declarations)

    Declarations  go to state 23
    declaration   go to state 13
    Identifiers   go to state 14


state 19

   12 declaration: Identifiers COLON . Arrayid

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    Arrayid  go to state 26


state 20

    8 Declarations: error SEMICOLON Declarations .

    $default  reduce using rule 8 (Declarations)


state 21

   15 Identifiers: IDENTIFIERS COMMA Identifiers .

    $default  reduce using rule 15 (Identifiers)


state 22

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS . Declarations ENDLOCALS BEGINBODY statements ENDBODY

    error        shift, and go to state 10
    IDENTIFIERS  shift, and go to state 11

    ENDLOCALS  reduce using rule 5 (Declarations)

    Declarations  go to state 27
    declaration   go to state 13
    Identifiers   go to state 14


state 23

    6 Declarations: declaration SEMICOLON Declarations .

    $default  reduce using rule 6 (Declarations)


state 24

   16 Arrayid: INTEGER .

    $default  reduce using rule 16 (Arrayid)


state 25

   17 Arrayid: ARRAY . LSQUARE NUMBER RSQUARE OF INTEGER

    LSQUARE  shift, and go to state 28


state 26

   12 declaration: Identifiers COLON Arrayid .

    $default  reduce using rule 12 (declaration)


state 27

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 29


state 28

   17 Arrayid: ARRAY LSQUARE . NUMBER RSQUARE OF INTEGER

    NUMBER  shift, and go to state 30


state 29

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 31


state 30

   17 Arrayid: ARRAY LSQUARE NUMBER . RSQUARE OF INTEGER

    RSQUARE  shift, and go to state 32


state 31

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    statements  go to state 41
    statement   go to state 42
    var         go to state 43


state 32

   17 Arrayid: ARRAY LSQUARE NUMBER RSQUARE . OF INTEGER

    OF  shift, and go to state 44


state 33

   65 var: IDENTIFIERS .
   66    | IDENTIFIERS . LSQUARE expression RSQUARE

    LSQUARE  shift, and go to state 45

    $default  reduce using rule 65 (var)


state 34

   19 statement: IF . bool_expr THEN statements elsestates ENDIF

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 53
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 56
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 35

   20 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 62
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 56
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 36

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 63


state 37

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


state 38

   22 statement: READ . vars

    IDENTIFIERS  shift, and go to state 33

    var   go to state 64
    vars  go to state 65


state 39

   23 statement: WRITE . vars

    IDENTIFIERS  shift, and go to state 33

    var   go to state 64
    vars  go to state 66


state 40

   25 statement: RETURN . expression

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 68
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 41

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 69


state 42

   10 statements: statement . SEMICOLON statements
   11           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 70


state 43

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


state 44

   17 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF . INTEGER

    INTEGER  shift, and go to state 72


state 45

   66 var: IDENTIFIERS LSQUARE . expression RSQUARE

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 73
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 46

   63 posterm: NUMBER .

    $default  reduce using rule 63 (posterm)


state 47

   58 ident: IDENTIFIERS . LPAREN ex RPAREN
   65 var: IDENTIFIERS .
   66    | IDENTIFIERS . LSQUARE expression RSQUARE

    LPAREN   shift, and go to state 74
    LSQUARE  shift, and go to state 45

    $default  reduce using rule 65 (var)


state 48

   37 relation_Expr: TRUE .

    $default  reduce using rule 37 (relation_Expr)


state 49

   38 relation_Expr: FALSE .

    $default  reduce using rule 38 (relation_Expr)


state 50

   39 relation_Expr: LPAREN . bool_expr RPAREN
   64 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 75
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 76
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 51

   56 term: SUB . posterm

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 33
    LPAREN       shift, and go to state 67

    posterm  go to state 77
    var      go to state 61


state 52

   32 relation_Expr: NOT . expression comp expression
   33              | NOT . TRUE
   34              | NOT . FALSE
   35              | NOT . LPAREN bool_expr RPAREN

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 78
    FALSE        shift, and go to state 79
    LPAREN       shift, and go to state 80
    SUB          shift, and go to state 51

    expression           go to state 81
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 53

   19 statement: IF bool_expr . THEN statements elsestates ENDIF

    THEN  shift, and go to state 82


state 54

   28 bool_expr: relation_And_Expr .
   29          | relation_And_Expr . OR bool_expr

    OR  shift, and go to state 83

    $default  reduce using rule 28 (bool_expr)


state 55

   30 relation_And_Expr: relation_Expr .
   31                  | relation_Expr . AND relation_And_Expr

    AND  shift, and go to state 84

    $default  reduce using rule 30 (relation_And_Expr)


state 56

   36 relation_Expr: expression . comp expression

    NEQ  shift, and go to state 85
    EQ   shift, and go to state 86
    GTE  shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    LT   shift, and go to state 90

    comp  go to state 91


state 57

   46 expression: multiplicative_Expr . expre

    SUB   shift, and go to state 92
    PLUS  shift, and go to state 93

    $default  reduce using rule 47 (expre)

    expre  go to state 94


state 58

   50 multiplicative_Expr: term . terms

    MOD   shift, and go to state 95
    DIVI  shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 51 (terms)

    terms  go to state 98


state 59

   57 term: ident .

    $default  reduce using rule 57 (term)


state 60

   55 term: posterm .

    $default  reduce using rule 55 (term)


state 61

   62 posterm: var .

    $default  reduce using rule 62 (posterm)


state 62

   20 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


state 63

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    statements  go to state 100
    statement   go to state 42
    var         go to state 43


state 64

   67 vars: var . COMMA vars
   68     | var .

    COMMA  shift, and go to state 101

    $default  reduce using rule 68 (vars)


state 65

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


state 66

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


state 67

   64 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 102
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 68

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


state 69

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


state 70

   10 statements: statement SEMICOLON . statements
   11           | statement SEMICOLON .

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    $default  reduce using rule 11 (statements)

    statements  go to state 103
    statement   go to state 42
    var         go to state 43


state 71

   18 statement: var ASSIGN . expression

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 104
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 72

   17 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF INTEGER .

    $default  reduce using rule 17 (Arrayid)


state 73

   66 var: IDENTIFIERS LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 105


state 74

   58 ident: IDENTIFIERS LPAREN . ex RPAREN

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    $default  reduce using rule 59 (ex)

    expression           go to state 106
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    ex                   go to state 107
    posterm              go to state 60
    var                  go to state 61


state 75

   39 relation_Expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 108


state 76

   36 relation_Expr: expression . comp expression
   64 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 109
    NEQ     shift, and go to state 85
    EQ      shift, and go to state 86
    GTE     shift, and go to state 87
    GT      shift, and go to state 88
    LTE     shift, and go to state 89
    LT      shift, and go to state 90

    comp  go to state 91


state 77

   56 term: SUB posterm .

    $default  reduce using rule 56 (term)


state 78

   33 relation_Expr: NOT TRUE .

    $default  reduce using rule 33 (relation_Expr)


state 79

   34 relation_Expr: NOT FALSE .

    $default  reduce using rule 34 (relation_Expr)


state 80

   35 relation_Expr: NOT LPAREN . bool_expr RPAREN
   64 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 110
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 76
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 81

   32 relation_Expr: NOT expression . comp expression

    NEQ  shift, and go to state 85
    EQ   shift, and go to state 86
    GTE  shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    LT   shift, and go to state 90

    comp  go to state 111


state 82

   19 statement: IF bool_expr THEN . statements elsestates ENDIF

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    statements  go to state 112
    statement   go to state 42
    var         go to state 43


state 83

   29 bool_expr: relation_And_Expr OR . bool_expr

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 113
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 56
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 84

   31 relation_And_Expr: relation_Expr AND . relation_And_Expr

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    relation_And_Expr    go to state 114
    relation_Expr        go to state 55
    expression           go to state 56
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 85

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


state 86

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


state 87

   45 comp: GTE .

    $default  reduce using rule 45 (comp)


state 88

   43 comp: GT .

    $default  reduce using rule 43 (comp)


state 89

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


state 90

   42 comp: LT .

    $default  reduce using rule 42 (comp)


state 91

   36 relation_Expr: expression comp . expression

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 115
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 92

   49 expre: SUB . multiplicative_Expr expre

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    multiplicative_Expr  go to state 116
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 93

   48 expre: PLUS . multiplicative_Expr expre

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    multiplicative_Expr  go to state 117
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 94

   46 expression: multiplicative_Expr expre .

    $default  reduce using rule 46 (expression)


state 95

   54 terms: MOD . term terms

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    term     go to state 118
    ident    go to state 59
    posterm  go to state 60
    var      go to state 61


state 96

   53 terms: DIVI . term terms

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    term     go to state 119
    ident    go to state 59
    posterm  go to state 60
    var      go to state 61


state 97

   52 terms: MULT . term terms

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    term     go to state 120
    ident    go to state 59
    posterm  go to state 60
    var      go to state 61


state 98

   50 multiplicative_Expr: term terms .

    $default  reduce using rule 50 (multiplicative_Expr)


state 99

   20 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    statements  go to state 121
    statement   go to state 42
    var         go to state 43


state 100

   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 122


state 101

   67 vars: var COMMA . vars

    IDENTIFIERS  shift, and go to state 33

    var   go to state 64
    vars  go to state 123


state 102

   64 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 109


state 103

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


state 104

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


state 105

   66 var: IDENTIFIERS LSQUARE expression RSQUARE .

    $default  reduce using rule 66 (var)


state 106

   60 ex: expression .
   61   | expression . COMMA ex

    COMMA  shift, and go to state 124

    $default  reduce using rule 60 (ex)


state 107

   58 ident: IDENTIFIERS LPAREN ex . RPAREN

    RPAREN  shift, and go to state 125


state 108

   39 relation_Expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 39 (relation_Expr)


state 109

   64 posterm: LPAREN expression RPAREN .

    $default  reduce using rule 64 (posterm)


state 110

   35 relation_Expr: NOT LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 126


state 111

   32 relation_Expr: NOT expression comp . expression

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    expression           go to state 127
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 112

   19 statement: IF bool_expr THEN statements . elsestates ENDIF

    ELSE  shift, and go to state 128

    $default  reduce using rule 26 (elsestates)

    elsestates  go to state 129


state 113

   29 bool_expr: relation_And_Expr OR bool_expr .

    $default  reduce using rule 29 (bool_expr)


state 114

   31 relation_And_Expr: relation_Expr AND relation_And_Expr .

    $default  reduce using rule 31 (relation_And_Expr)


state 115

   36 relation_Expr: expression comp expression .

    $default  reduce using rule 36 (relation_Expr)


state 116

   49 expre: SUB multiplicative_Expr . expre

    SUB   shift, and go to state 92
    PLUS  shift, and go to state 93

    $default  reduce using rule 47 (expre)

    expre  go to state 130


state 117

   48 expre: PLUS multiplicative_Expr . expre

    SUB   shift, and go to state 92
    PLUS  shift, and go to state 93

    $default  reduce using rule 47 (expre)

    expre  go to state 131


state 118

   54 terms: MOD term . terms

    MOD   shift, and go to state 95
    DIVI  shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 51 (terms)

    terms  go to state 132


state 119

   53 terms: DIVI term . terms

    MOD   shift, and go to state 95
    DIVI  shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 51 (terms)

    terms  go to state 133


state 120

   52 terms: MULT term . terms

    MOD   shift, and go to state 95
    DIVI  shift, and go to state 96
    MULT  shift, and go to state 97

    $default  reduce using rule 51 (terms)

    terms  go to state 134


state 121

   20 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


state 122

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 136


state 123

   67 vars: var COMMA vars .

    $default  reduce using rule 67 (vars)


state 124

   61 ex: expression COMMA . ex

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    LPAREN       shift, and go to state 67
    SUB          shift, and go to state 51

    $default  reduce using rule 59 (ex)

    expression           go to state 106
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    ex                   go to state 137
    posterm              go to state 60
    var                  go to state 61


state 125

   58 ident: IDENTIFIERS LPAREN ex RPAREN .

    $default  reduce using rule 58 (ident)


state 126

   35 relation_Expr: NOT LPAREN bool_expr RPAREN .

    $default  reduce using rule 35 (relation_Expr)


state 127

   32 relation_Expr: NOT expression comp expression .

    $default  reduce using rule 32 (relation_Expr)


state 128

   27 elsestates: ELSE . statements

    IDENTIFIERS  shift, and go to state 33
    IF           shift, and go to state 34
    WHILE        shift, and go to state 35
    DO           shift, and go to state 36
    CONTINUE     shift, and go to state 37
    READ         shift, and go to state 38
    WRITE        shift, and go to state 39
    RETURN       shift, and go to state 40

    statements  go to state 138
    statement   go to state 42
    var         go to state 43


state 129

   19 statement: IF bool_expr THEN statements elsestates . ENDIF

    ENDIF  shift, and go to state 139


state 130

   49 expre: SUB multiplicative_Expr expre .

    $default  reduce using rule 49 (expre)


state 131

   48 expre: PLUS multiplicative_Expr expre .

    $default  reduce using rule 48 (expre)


state 132

   54 terms: MOD term terms .

    $default  reduce using rule 54 (terms)


state 133

   53 terms: DIVI term terms .

    $default  reduce using rule 53 (terms)


state 134

   52 terms: MULT term terms .

    $default  reduce using rule 52 (terms)


state 135

   20 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


state 136

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NUMBER       shift, and go to state 46
    IDENTIFIERS  shift, and go to state 47
    TRUE         shift, and go to state 48
    FALSE        shift, and go to state 49
    LPAREN       shift, and go to state 50
    SUB          shift, and go to state 51
    NOT          shift, and go to state 52

    bool_expr            go to state 140
    relation_And_Expr    go to state 54
    relation_Expr        go to state 55
    expression           go to state 56
    multiplicative_Expr  go to state 57
    term                 go to state 58
    ident                go to state 59
    posterm              go to state 60
    var                  go to state 61


state 137

   61 ex: expression COMMA ex .

    $default  reduce using rule 61 (ex)


state 138

   27 elsestates: ELSE statements .

    $default  reduce using rule 27 (elsestates)


state 139

   19 statement: IF bool_expr THEN statements elsestates ENDIF .

    $default  reduce using rule 19 (statement)


state 140

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 21 (statement)
