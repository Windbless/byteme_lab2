Terminals which are not used

   FOREACH


Rules never reduced

    6 Declarations: declaration SEMICOLON


State 16 conflicts: 2 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 Declarations: /* empty */
    6             | declaration SEMICOLON
    7             | declaration SEMICOLON Declarations

    8 statements: statement SEMICOLON statements
    9           | statement SEMICOLON

   10 declaration: Identifiers COLON Arrayid

   11 Identifiers: IDENTIFIERS
   12            | IDENTIFIERS COMMA Identifiers

   13 Arrayid: INTEGER
   14        | ARRAY LSQUARE NUMBER RSQUARE OF INTEGER

   15 statement: astate
   16          | bstate
   17          | cstate
   18          | dstate
   19          | estate
   20          | fstate
   21          | gstate
   22          | hstate

   23 astate: var ASSIGN expression

   24 bstate: IF bool_expr THEN statements elsestates ENDIF

   25 elsestates: /* empty */
   26           | ELSE statements

   27 cstate: WHILE bool_expr BEGINLOOP statements ENDLOOP

   28 dstate: DO BEGINLOOP statements ENDLOOP WHILE bool_expr

   29 estate: READ vars

   30 fstate: WRITE vars

   31 gstate: CONTINUE

   32 hstate: RETURN expression

   33 bool_expr: relation_And_Expr
   34          | relation_And_Expr OR bool_expr

   35 relation_And_Expr: relation_Expr
   36                  | relation_Expr AND relation_And_Expr

   37 relation_Expr: NOT re_ex
   38              | re_ex

   39 re_ex: expression comp expression
   40      | TRUE
   41      | FALSE
   42      | LPAREN bool_expr RPAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: multiplicative_Expr expre

   50 expre: /* empty */
   51      | PLUS multiplicative_Expr expre
   52      | SUB multiplicative_Expr expre

   53 multiplicative_Expr: term terms

   54 terms: /* empty */
   55      | MULT term terms
   56      | DIVI term terms
   57      | MOD term terms

   58 term: posterm
   59     | SUB posterm
   60     | ident

   61 ident: IDENTIFIERS LPAREN ex RPAREN

   62 ex: /* empty */
   63   | expression
   64   | expression COMMA ex

   65 posterm: var
   66        | NUMBER
   67        | LPAREN expression RPAREN

   68 var: IDENTIFIERS
   69    | IDENTIFIERS LSQUARE expression RSQUARE

   70 vars: var COMMA vars
   71     | var


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 14 66
IDENTIFIERS (259) 4 11 12 61 68 69
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 13 14
ARRAY (268) 14
OF (269) 14
IF (270) 24
THEN (271) 24
ENDIF (272) 24
ELSE (273) 26
WHILE (274) 27 28
DO (275) 28
FOREACH (276)
BEGINLOOP (277) 27 28
ENDLOOP (278) 27 28
CONTINUE (279) 31
READ (280) 29
WRITE (281) 30
TRUE (282) 40
FALSE (283) 41
SEMICOLON (284) 4 6 7 8 9
COLON (285) 10
COMMA (286) 12 64 70
LPAREN (287) 42 61 67
RPAREN (288) 42 61 67
LSQUARE (289) 14 69
RSQUARE (290) 14 69
RETURN (291) 32
SUB (292) 52 59
PLUS (293) 51
MOD (294) 57
DIVI (295) 56
MULT (296) 55
OR (297) 34
AND (298) 36
NEQ (299) 44
EQ (300) 43
GTE (301) 48
GT (302) 46
LTE (303) 47
LT (304) 45
NOT (305) 37
ASSIGN (306) 23


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
Declarations (56)
    on left: 5 6 7, on right: 4 7
statements (57)
    on left: 8 9, on right: 4 8 24 26 27 28
declaration (58)
    on left: 10, on right: 6 7
Identifiers (59)
    on left: 11 12, on right: 10 12
Arrayid (60)
    on left: 13 14, on right: 10
statement (61)
    on left: 15 16 17 18 19 20 21 22, on right: 8 9
astate (62)
    on left: 23, on right: 15
bstate (63)
    on left: 24, on right: 16
elsestates (64)
    on left: 25 26, on right: 24
cstate (65)
    on left: 27, on right: 17
dstate (66)
    on left: 28, on right: 18
estate (67)
    on left: 29, on right: 19
fstate (68)
    on left: 30, on right: 20
gstate (69)
    on left: 31, on right: 21
hstate (70)
    on left: 32, on right: 22
bool_expr (71)
    on left: 33 34, on right: 24 27 28 34 42
relation_And_Expr (72)
    on left: 35 36, on right: 33 34 36
relation_Expr (73)
    on left: 37 38, on right: 35 36
re_ex (74)
    on left: 39 40 41 42, on right: 37 38
comp (75)
    on left: 43 44 45 46 47 48, on right: 39
expression (76)
    on left: 49, on right: 23 32 39 63 64 67 69
expre (77)
    on left: 50 51 52, on right: 49 51 52
multiplicative_Expr (78)
    on left: 53, on right: 49 51 52
terms (79)
    on left: 54 55 56 57, on right: 53 55 56 57
term (80)
    on left: 58 59 60, on right: 53 55 56 57
ident (81)
    on left: 61, on right: 60
ex (82)
    on left: 62 63 64, on right: 61 64
posterm (83)
    on left: 65 66 67, on right: 58 59
var (84)
    on left: 68 69, on right: 23 65 70 71
vars (85)
    on left: 70 71, on right: 29 30 70


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


state 1

    4 function: FUNCTION . IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 5


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


state 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIERS . SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: prog_start $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIERS SEMICOLON . BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS . Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 10

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 11
    declaration   go to state 12
    Identifiers   go to state 13


state 10

   11 Identifiers: IDENTIFIERS .
   12            | IDENTIFIERS . COMMA Identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 11 (Identifiers)


state 11

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations . ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


state 12

    6 Declarations: declaration . SEMICOLON
    7             | declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


state 13

   10 declaration: Identifiers . COLON Arrayid

    COLON  shift, and go to state 17


state 14

   12 Identifiers: IDENTIFIERS COMMA . Identifiers

    IDENTIFIERS  shift, and go to state 10

    Identifiers  go to state 18


state 15

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS . BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


state 16

    6 Declarations: declaration SEMICOLON .
    7             | declaration SEMICOLON . Declarations

    IDENTIFIERS  shift, and go to state 10

    ENDPARAMS  reduce using rule 5 (Declarations)
    ENDPARAMS  [reduce using rule 6 (Declarations)]
    ENDLOCALS  reduce using rule 5 (Declarations)
    ENDLOCALS  [reduce using rule 6 (Declarations)]
    $default   reduce using rule 5 (Declarations)

    Declarations  go to state 20
    declaration   go to state 12
    Identifiers   go to state 13


state 17

   10 declaration: Identifiers COLON . Arrayid

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    Arrayid  go to state 23


state 18

   12 Identifiers: IDENTIFIERS COMMA Identifiers .

    $default  reduce using rule 12 (Identifiers)


state 19

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS . Declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIERS  shift, and go to state 10

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 24
    declaration   go to state 12
    Identifiers   go to state 13


state 20

    7 Declarations: declaration SEMICOLON Declarations .

    $default  reduce using rule 7 (Declarations)


state 21

   13 Arrayid: INTEGER .

    $default  reduce using rule 13 (Arrayid)


state 22

   14 Arrayid: ARRAY . LSQUARE NUMBER RSQUARE OF INTEGER

    LSQUARE  shift, and go to state 25


state 23

   10 declaration: Identifiers COLON Arrayid .

    $default  reduce using rule 10 (declaration)


state 24

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


state 25

   14 Arrayid: ARRAY LSQUARE . NUMBER RSQUARE OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 28


state 27

   14 Arrayid: ARRAY LSQUARE NUMBER . RSQUARE OF INTEGER

    RSQUARE  shift, and go to state 29


state 28

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statements  go to state 38
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 29

   14 Arrayid: ARRAY LSQUARE NUMBER RSQUARE . OF INTEGER

    OF  shift, and go to state 49


state 30

   68 var: IDENTIFIERS .
   69    | IDENTIFIERS . LSQUARE expression RSQUARE

    LSQUARE  shift, and go to state 50

    $default  reduce using rule 68 (var)


state 31

   24 bstate: IF . bool_expr THEN statements elsestates ENDIF

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 58
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 32

   27 cstate: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 68
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 33

   28 dstate: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 69


state 34

   31 gstate: CONTINUE .

    $default  reduce using rule 31 (gstate)


state 35

   29 estate: READ . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 71


state 36

   30 fstate: WRITE . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 72


state 37

   32 hstate: RETURN . expression

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 74
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 38

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 75


state 39

    8 statements: statement . SEMICOLON statements
    9           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 40

   15 statement: astate .

    $default  reduce using rule 15 (statement)


state 41

   16 statement: bstate .

    $default  reduce using rule 16 (statement)


state 42

   17 statement: cstate .

    $default  reduce using rule 17 (statement)


state 43

   18 statement: dstate .

    $default  reduce using rule 18 (statement)


state 44

   19 statement: estate .

    $default  reduce using rule 19 (statement)


state 45

   20 statement: fstate .

    $default  reduce using rule 20 (statement)


state 46

   21 statement: gstate .

    $default  reduce using rule 21 (statement)


state 47

   22 statement: hstate .

    $default  reduce using rule 22 (statement)


state 48

   23 astate: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


state 49

   14 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF . INTEGER

    INTEGER  shift, and go to state 78


state 50

   69 var: IDENTIFIERS LSQUARE . expression RSQUARE

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 79
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 51

   66 posterm: NUMBER .

    $default  reduce using rule 66 (posterm)


state 52

   61 ident: IDENTIFIERS . LPAREN ex RPAREN
   68 var: IDENTIFIERS .
   69    | IDENTIFIERS . LSQUARE expression RSQUARE

    LPAREN   shift, and go to state 80
    LSQUARE  shift, and go to state 50

    $default  reduce using rule 68 (var)


state 53

   40 re_ex: TRUE .

    $default  reduce using rule 40 (re_ex)


state 54

   41 re_ex: FALSE .

    $default  reduce using rule 41 (re_ex)


state 55

   42 re_ex: LPAREN . bool_expr RPAREN
   67 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 81
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 82
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 56

   59 term: SUB . posterm

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 30
    LPAREN       shift, and go to state 73

    posterm  go to state 83
    var      go to state 67


state 57

   37 relation_Expr: NOT . re_ex

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56

    re_ex                go to state 84
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 58

   24 bstate: IF bool_expr . THEN statements elsestates ENDIF

    THEN  shift, and go to state 85


state 59

   33 bool_expr: relation_And_Expr .
   34          | relation_And_Expr . OR bool_expr

    OR  shift, and go to state 86

    $default  reduce using rule 33 (bool_expr)


state 60

   35 relation_And_Expr: relation_Expr .
   36                  | relation_Expr . AND relation_And_Expr

    AND  shift, and go to state 87

    $default  reduce using rule 35 (relation_And_Expr)


state 61

   38 relation_Expr: re_ex .

    $default  reduce using rule 38 (relation_Expr)


state 62

   39 re_ex: expression . comp expression

    NEQ  shift, and go to state 88
    EQ   shift, and go to state 89
    GTE  shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    LT   shift, and go to state 93

    comp  go to state 94


state 63

   49 expression: multiplicative_Expr . expre

    SUB   shift, and go to state 95
    PLUS  shift, and go to state 96

    $default  reduce using rule 50 (expre)

    expre  go to state 97


state 64

   53 multiplicative_Expr: term . terms

    MOD   shift, and go to state 98
    DIVI  shift, and go to state 99
    MULT  shift, and go to state 100

    $default  reduce using rule 54 (terms)

    terms  go to state 101


state 65

   60 term: ident .

    $default  reduce using rule 60 (term)


state 66

   58 term: posterm .

    $default  reduce using rule 58 (term)


state 67

   65 posterm: var .

    $default  reduce using rule 65 (posterm)


state 68

   27 cstate: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 102


state 69

   28 dstate: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statements  go to state 103
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 70

   70 vars: var . COMMA vars
   71     | var .

    COMMA  shift, and go to state 104

    $default  reduce using rule 71 (vars)


state 71

   29 estate: READ vars .

    $default  reduce using rule 29 (estate)


state 72

   30 fstate: WRITE vars .

    $default  reduce using rule 30 (fstate)


state 73

   67 posterm: LPAREN . expression RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 105
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 74

   32 hstate: RETURN expression .

    $default  reduce using rule 32 (hstate)


state 75

    4 function: FUNCTION IDENTIFIERS SEMICOLON BEGINPARAMS Declarations ENDPARAMS BEGINLOCALS Declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


state 76

    8 statements: statement SEMICOLON . statements
    9           | statement SEMICOLON .

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    $default  reduce using rule 9 (statements)

    statements  go to state 106
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 77

   23 astate: var ASSIGN . expression

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 107
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 78

   14 Arrayid: ARRAY LSQUARE NUMBER RSQUARE OF INTEGER .

    $default  reduce using rule 14 (Arrayid)


state 79

   69 var: IDENTIFIERS LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 108


state 80

   61 ident: IDENTIFIERS LPAREN . ex RPAREN

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    $default  reduce using rule 62 (ex)

    expression           go to state 109
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    ex                   go to state 110
    posterm              go to state 66
    var                  go to state 67


state 81

   42 re_ex: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 111


state 82

   39 re_ex: expression . comp expression
   67 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 112
    NEQ     shift, and go to state 88
    EQ      shift, and go to state 89
    GTE     shift, and go to state 90
    GT      shift, and go to state 91
    LTE     shift, and go to state 92
    LT      shift, and go to state 93

    comp  go to state 94


state 83

   59 term: SUB posterm .

    $default  reduce using rule 59 (term)


state 84

   37 relation_Expr: NOT re_ex .

    $default  reduce using rule 37 (relation_Expr)


state 85

   24 bstate: IF bool_expr THEN . statements elsestates ENDIF

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statements  go to state 113
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 86

   34 bool_expr: relation_And_Expr OR . bool_expr

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 114
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 87

   36 relation_And_Expr: relation_Expr AND . relation_And_Expr

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    relation_And_Expr    go to state 115
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 88

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


state 89

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


state 90

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


state 91

   46 comp: GT .

    $default  reduce using rule 46 (comp)


state 92

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


state 93

   45 comp: LT .

    $default  reduce using rule 45 (comp)


state 94

   39 re_ex: expression comp . expression

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    expression           go to state 116
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 95

   52 expre: SUB . multiplicative_Expr expre

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    multiplicative_Expr  go to state 117
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 96

   51 expre: PLUS . multiplicative_Expr expre

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    multiplicative_Expr  go to state 118
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 97

   49 expression: multiplicative_Expr expre .

    $default  reduce using rule 49 (expression)


state 98

   57 terms: MOD . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 119
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 99

   56 terms: DIVI . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 120
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 100

   55 terms: MULT . term terms

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    term     go to state 121
    ident    go to state 65
    posterm  go to state 66
    var      go to state 67


state 101

   53 multiplicative_Expr: term terms .

    $default  reduce using rule 53 (multiplicative_Expr)


state 102

   27 cstate: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statements  go to state 122
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 103

   28 dstate: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 123


state 104

   70 vars: var COMMA . vars

    IDENTIFIERS  shift, and go to state 30

    var   go to state 70
    vars  go to state 124


state 105

   67 posterm: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 112


state 106

    8 statements: statement SEMICOLON statements .

    $default  reduce using rule 8 (statements)


state 107

   23 astate: var ASSIGN expression .

    $default  reduce using rule 23 (astate)


state 108

   69 var: IDENTIFIERS LSQUARE expression RSQUARE .

    $default  reduce using rule 69 (var)


state 109

   63 ex: expression .
   64   | expression . COMMA ex

    COMMA  shift, and go to state 125

    $default  reduce using rule 63 (ex)


state 110

   61 ident: IDENTIFIERS LPAREN ex . RPAREN

    RPAREN  shift, and go to state 126


state 111

   42 re_ex: LPAREN bool_expr RPAREN .

    $default  reduce using rule 42 (re_ex)


state 112

   67 posterm: LPAREN expression RPAREN .

    $default  reduce using rule 67 (posterm)


state 113

   24 bstate: IF bool_expr THEN statements . elsestates ENDIF

    ELSE  shift, and go to state 127

    $default  reduce using rule 25 (elsestates)

    elsestates  go to state 128


state 114

   34 bool_expr: relation_And_Expr OR bool_expr .

    $default  reduce using rule 34 (bool_expr)


state 115

   36 relation_And_Expr: relation_Expr AND relation_And_Expr .

    $default  reduce using rule 36 (relation_And_Expr)


state 116

   39 re_ex: expression comp expression .

    $default  reduce using rule 39 (re_ex)


state 117

   52 expre: SUB multiplicative_Expr . expre

    SUB   shift, and go to state 95
    PLUS  shift, and go to state 96

    $default  reduce using rule 50 (expre)

    expre  go to state 129


state 118

   51 expre: PLUS multiplicative_Expr . expre

    SUB   shift, and go to state 95
    PLUS  shift, and go to state 96

    $default  reduce using rule 50 (expre)

    expre  go to state 130


state 119

   57 terms: MOD term . terms

    MOD   shift, and go to state 98
    DIVI  shift, and go to state 99
    MULT  shift, and go to state 100

    $default  reduce using rule 54 (terms)

    terms  go to state 131


state 120

   56 terms: DIVI term . terms

    MOD   shift, and go to state 98
    DIVI  shift, and go to state 99
    MULT  shift, and go to state 100

    $default  reduce using rule 54 (terms)

    terms  go to state 132


state 121

   55 terms: MULT term . terms

    MOD   shift, and go to state 98
    DIVI  shift, and go to state 99
    MULT  shift, and go to state 100

    $default  reduce using rule 54 (terms)

    terms  go to state 133


state 122

   27 cstate: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 134


state 123

   28 dstate: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 135


state 124

   70 vars: var COMMA vars .

    $default  reduce using rule 70 (vars)


state 125

   64 ex: expression COMMA . ex

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    LPAREN       shift, and go to state 73
    SUB          shift, and go to state 56

    $default  reduce using rule 62 (ex)

    expression           go to state 109
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    ex                   go to state 136
    posterm              go to state 66
    var                  go to state 67


state 126

   61 ident: IDENTIFIERS LPAREN ex RPAREN .

    $default  reduce using rule 61 (ident)


state 127

   26 elsestates: ELSE . statements

    IDENTIFIERS  shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    DO           shift, and go to state 33
    CONTINUE     shift, and go to state 34
    READ         shift, and go to state 35
    WRITE        shift, and go to state 36
    RETURN       shift, and go to state 37

    statements  go to state 137
    statement   go to state 39
    astate      go to state 40
    bstate      go to state 41
    cstate      go to state 42
    dstate      go to state 43
    estate      go to state 44
    fstate      go to state 45
    gstate      go to state 46
    hstate      go to state 47
    var         go to state 48


state 128

   24 bstate: IF bool_expr THEN statements elsestates . ENDIF

    ENDIF  shift, and go to state 138


state 129

   52 expre: SUB multiplicative_Expr expre .

    $default  reduce using rule 52 (expre)


state 130

   51 expre: PLUS multiplicative_Expr expre .

    $default  reduce using rule 51 (expre)


state 131

   57 terms: MOD term terms .

    $default  reduce using rule 57 (terms)


state 132

   56 terms: DIVI term terms .

    $default  reduce using rule 56 (terms)


state 133

   55 terms: MULT term terms .

    $default  reduce using rule 55 (terms)


state 134

   27 cstate: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 27 (cstate)


state 135

   28 dstate: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NUMBER       shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52
    TRUE         shift, and go to state 53
    FALSE        shift, and go to state 54
    LPAREN       shift, and go to state 55
    SUB          shift, and go to state 56
    NOT          shift, and go to state 57

    bool_expr            go to state 139
    relation_And_Expr    go to state 59
    relation_Expr        go to state 60
    re_ex                go to state 61
    expression           go to state 62
    multiplicative_Expr  go to state 63
    term                 go to state 64
    ident                go to state 65
    posterm              go to state 66
    var                  go to state 67


state 136

   64 ex: expression COMMA ex .

    $default  reduce using rule 64 (ex)


state 137

   26 elsestates: ELSE statements .

    $default  reduce using rule 26 (elsestates)


state 138

   24 bstate: IF bool_expr THEN statements elsestates ENDIF .

    $default  reduce using rule 24 (bstate)


state 139

   28 dstate: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 28 (dstate)
